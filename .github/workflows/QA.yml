run-name: Quality assurance

on:
  pull_request:

concurrency:
  # cancel any running action on new push
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  transpile:
    name: Transpile
    runs-on: ubuntu-latest
    container: node:20-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Transpile
        run: yarn workspaces foreach -p -t -A run build
        shell: bash

  license-check:
    name: License check
    runs-on: ubuntu-latest
    container: node:20-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: License check
        run: yarn lint:licenses

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: node:20-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: ESLint
        run: yarn lint:eslint --quiet

      - name: Prettier
        run: yarn lint:prettier

      - name: TSC
        run: yarn lint:tsc

  Test:
    name: Test
    runs-on: ubuntu-latest
    container: node:20-slim
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/actions/prepare

      - name: Run migrations
        run: yarn db:push-test
        env:
          DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}

      - name: Test
        run: yarn test
        env:
          # any variable with secret has little to no impact on the tests
          # For all services
          NODE_ENV: test
          DATABASE_URL: secret
          POSTHOG_KEY: secret
          # For all API services
          COOKIE_SECRET: secret
          DOMAIN: localhost
          JWT_SECRET: secret
          # For AI services
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MISTRAL_KEY: ${{ secrets.MISTRAL_KEY }}
          # For document upload and parsing
          BLOB_ACCESS_KEY_ID: ${{ secrets.BLOB_ACCESS_KEY_ID }}
          BLOB_SECRET_KEY: ${{ secrets.BLOB_SECRET_KEY }}
          BLOB_URL: ${{ secrets.BLOB_URL }}
          # For auth APIs
          GOOGLE_APP_ID: secret
          GOOGLE_APP_SECRET: secret
          MICROSOFT_CLIENT_ID: secret
          MICROSOFT_CLIENT_SECRET: secret
          # For email
          POSTMARK_KEY: ${{ secrets.POSTMARK_KEY }}
          # For tests only
          DATABASE_URL_TEST: ${{ secrets.DATABASE_URL_TEST }}
